name: Destroy a Cloud Resource using Terraform
on:
  workflow_dispatch:
    inputs:
      project:
        type: string
        description: Nombre de proyecto
        required: true
      env:
        type: string
        description: Nombre de ambiente
        required: true
      service:
        type: string
        description: Nombre del servicio
        default: vpc
      template:
        type: string
        description: Nombre de la plantilla
        required: true
      port_context:
        required: true
        description: >-
          Port's payload, including details for who triggered the action and
          general context (blueprint, run id, etc...)
jobs:
  plan-and-request-approval-for-bucket:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: '${{ secrets.AWS_ACCESS_KEY_ID }}'
          aws-secret-access-key: '${{ secrets.AWS_SECRET_ACCESS_KEY }}'
          aws-region: '${{ secrets.AWS_REGION }}'

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.6

      - name: Terraform Backend
        id: backend
        env:
          TF_VAR_project:  "${{ github.event.inputs.project }}"
          TF_VAR_env:  "${{ github.event.inputs.env }}"
          TF_VAR_aws_region: "${{ secrets.AWS_REGION }}"
        run: |
          sed -i 's/workspaceName/${{ github.event.inputs.project }}-${{ github.event.inputs.env }}/g' terraform/config.remote.tfbackend
          sed -i 's/TF_TOKEN/${{ secrets.TF_TOKEN }}/g' terraform/terraformrc
          mv terraform/config.remote.tfbackend terraform/${{ github.event.inputs.template }}/
          mv terraform/terraformrc ${HOME}/.terraformrc

      - name: Terraform Destroy
        id: destroy
        env:
          TF_VAR_project:  "${{ github.event.inputs.project }}"
          TF_VAR_env:  "${{ github.event.inputs.env }}"
          TF_VAR_aws_region: "${{ secrets.AWS_REGION }}"
        run: |
          cd terraform/${{ github.event.inputs.template }}/
          terraform init -backend-config=config.remote.tfbackend
          terraform destroy -auto-approve

      - uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: DELETE
          identifier: ${{ github.event.inputs.project }}-${{ github.event.inputs.env }}
          blueprint: VpcResource